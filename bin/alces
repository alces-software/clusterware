#!/bin/bash
#==============================================================================
# Copyright (C) 2007-2015 Stephen F. Norledge and Alces Software Ltd.
#
# This file/package is part of Alces Clusterware.
#
# Alces Clusterware is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License
# as published by the Free Software Foundation, either version 3 of
# the License, or (at your option) any later version.
#
# Alces Clusterware is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this package.  If not, see <http://www.gnu.org/licenses/>.
#
# For more information on the Alces Clusterware, please visit:
# https://github.com/alces-software/clusterware
#==============================================================================
function usage {
    if [ -f $cw_CMDDIR/help ]; then
        exec $0 help
    else
        # Fallback to something trivial until help is installed!
        echo "Usage: $cw_BINNAME <command>"
    fi
}

function cw_RUBY_EXEC {
  eval '
    if [ "$cw_RUBY" ]; then
      if [ -x "$cw_RUBY" ]; then
        exec $cw_RUBY $0 "$@"
      else
        echo "ERROR: No ruby environment available."
        exit 1
      fi
    else
      echo "ERROR: \$cw_RUBY was not set."
      exit 1
    fi'
}
export -f cw_RUBY_EXEC

function extract_info() {
    info=$(awk -f <(cat <<\EOF
  {
    if (substr($0,0,1) != ":") {
      next
    }
    split($0, a, ": ")
    gsub(/[[:space:]]*/, "", a[2])
    if (a[3]) {
      print "cmd_" a[2] "='" a[3] "'"
    }
    if (a[2]=="'") {
      if (started) {
        exit
      } else {
        started=1
      }
    }
  }
EOF
    ) $1)
    if [ -z "$info" ]; then
        unset cmd_NAME cmd_SYNOPSIS cmd_VERSION
    else
        eval "$info"
    fi
}
export -f extract_info

function display_help {
    extract_info $1
    # Render a help template here
    cat <<EOF
  [1mNAME[0m:

    $cw_BINNAME $cmd_NAME

  [1mDESCRIPTION[0m:

    $cmd_SYNOPSIS.

EOF
    #printf "    %-20s %s" "command" "XXX Command synopsis."
    echo ""
}
export -f display_help

setup() {
    local a xdg_config
    IFS=: read -a xdg_config <<< "${XDG_CONFIG_HOME:-$HOME/.config}:${XDG_CONFIG_DIRS:-/etc/xdg}"
    for a in "${xdg_config[@]}"; do
        if [ -e "${a}"/clusterware/config.vars.sh ]; then
            source "${a}"/clusterware/config.vars.sh
            break
        fi
    done
    if [ -z "${cw_ROOT}" ]; then
        echo "$0: unable to locate clusterware configuration"
        exit 1
    fi
    kernel_load
    test_vars=$(declare | grep '^cw_TEST_.*=' | cut -f1 -d'=')
    if [ "${test_vars}" ]; then
        export ${test_vars}
    fi
    export cw_BINNAME="alces"
    export cw_CMDDIR="$cw_ROOT/libexec/actions"
    if [ -t 2 ]; then
        export cw_COLOUR=${cw_COLOUR:-1}
    else
        export cw_COLOUR=${cw_COLOUR:-0}
    fi
    if [[ ":$cw_FLAGS:" =~ :nocolou?r: || "$TERM" == "linux" ]]; then
        export cw_COLOUR=0
    fi
    ### RUBY
    export cw_RUBY="$cw_ROOT/opt/ruby/bin/ruby"
    export cw_RUBYHOME="$cw_ROOT/opt/ruby"
    export LD_LIBRARY_PATH="${cw_RUBYHOME}/lib:$LD_LIBRARY_PATH"
    export GEM_HOME="${cw_RUBYHOME}/lib/ruby/gems/2.2.0"
    export GEM_PATH="${cw_RUBYHOME}/lib/ruby/gems/2.2.0"
}

main() {
    local cmd x a
    cmd=$1
    shift

    if [ "$cmd" == '-h' -o "$cmd" == '--help' ]; then
        usage
    elif [ -f "$cw_CMDDIR/$cmd" ]; then
        /bin/bash $cw_CMDDIR/$cmd "$@"
    elif [ "$cmd" ]; then
        x=("$cw_CMDDIR/$cmd"*)

        if [ $x = "$cw_CMDDIR/$cmd"'*' ]; then
            # no match
            echo "$cw_BINNAME: '$cmd' is not a known command. See '$cw_BINNAME --help'."
            exit 1
        elif [ ${#x[*]} = 1 ]; then
            # matched one
            exec /bin/bash "$cw_CMDDIR/$cmd"* "$@"
        elif [ ${#x[*]} -gt 1 ]; then
            # matched > 1
            echo "$cw_BINNAME: ambiguous command: $cmd"
            echo "Did you mean one of these?"
            for a in ${x[*]}; do
                echo "        `basename $a`"
            done
            echo ""
            exit 1
        fi
    else
        usage
    fi
}

if [ "$cw_DEBUG" ]; then
    set -x
fi
setup

main "$@"

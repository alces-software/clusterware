#!/bin/bash
#==============================================================================
# Copyright (C) 2015 Stephen F. Norledge and Alces Software Ltd.
#
# This file/package is part of Alces Clusterware.
#
# Alces Clusterware is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License
# as published by the Free Software Foundation, either version 3 of
# the License, or (at your option) any later version.
#
# Alces Clusterware is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this package.  If not, see <http://www.gnu.org/licenses/>.
#
# For more information on the Alces Clusterware, please visit:
# https://github.com/alces-software/clusterware
#==============================================================================
if (( UID != 0 )); then
  echo "$0: must run as root"
  exit 1
fi

if [ -z "$alces_OS" ]; then
  echo "$0: must set alces_OS variable (current options are: 'el6', 'el7')"
  exit 1
fi

# Configuration parameters for isolated network propagation
#export alces_SOURCE_URL=""
#export alces_DIST_URL=""
#export alces_REPOS_URL=""

# set alces_FETCH_HANDLING to either 'source' or 'bin'
#  'source' -- build all dependencies
#  'bin'    -- download prebuilt dependencies
alces_FETCH_HANDLING="${alces_FETCH_HANDLING:-bin}"

src_dir="${alces_SOURCE_DIR:-$(mktemp -d /tmp/clusterware.XXXXXXXX)}"

if [ ! -f "${src_dir}"/scripts/install ]; then
    if [ "$(ls -A "${src_dir}" 2>/dev/null)" ]; then
        echo "An incomplete source directory already exists, please remove or specify a different location: ${src_dir}"
        exit 1
    fi
    cleanup=true
    src_url_base="https://github.com/alces-software/clusterware/archive"
    src_url_file="${alces_SOURCE_BRANCH:-master}.tar.gz"
    src_url="${alces_SOURCE_URL:-${src_url_base}/${src_url_file}}"
    # Download source
    cat <<EOF
[33m
===============================================================================
 DOWNLOADING SOURCE
===============================================================================
[0m
EOF
    mkdir -p "${src_dir}"
    curl -# -L "${src_url}" | \
        tar -C "${src_dir}" --strip-components 1 -xz

    if [ $? -gt 0 ]; then
        echo "Unable to retrieve Alces Clusterware source tree, aborting."
        exit 1
    fi

    if [ "$alces_REPOS_URL" ]; then
        curl -# -L "${alces_REPOS_URL}/clusterware-handlers.tar.gz" > "${src_dir}/clusterware-handlers.tar.gz"
        curl -# -L "${alces_REPOS_URL}/clusterware-sessions.tar.gz" > "${src_dir}/clusterware-sessions.tar.gz"
        curl -# -L "${alces_REPOS_URL}/clusterware-services.tar.gz" > "${src_dir}/clusterware-services.tar.gz"
        curl -# -L "${alces_REPOS_URL}/packager-base.tar.gz" > "${src_dir}/packager-base.tar.gz"
    fi
fi

cat <<EOF
[33m
===============================================================================
 BOOTSTRAPPING INSTALLER
===============================================================================
[0m
EOF
bash "${src_dir}/scripts/install" "$alces_OS" "$alces_FETCH_HANDLING"
if [ "$cleanup" = "true" ]; then
    rm -rf "${src_dir}"
fi

#!/bin/bash
#==============================================================================
# Copyright (C) 2015 Stephen F. Norledge and Alces Software Ltd.
#
# This file/package is part of Alces Clusterware.
#
# Alces Clusterware is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License
# as published by the Free Software Foundation, either version 3 of
# the License, or (at your option) any later version.
#
# Alces Clusterware is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this package.  If not, see <http://www.gnu.org/licenses/>.
#
# For more information on the Alces Clusterware, please visit:
# https://github.com/alces-software/clusterware
#==============================================================================
source=$(cd "$(dirname "${BASH_SOURCE[0]}")"/.. && pwd)
source $source/scripts/control.vars.sh
source $source/scripts/registry.rc
source $source/scripts/lib/ui.functions.sh
source $source/scripts/lib/fetch.functions.sh
source $source/scripts/lib/install.functions.sh

if [ -z "$2" ]; then
  echo "$0: invalid parameters"
  cat <<EOF
Usage: $0 <OS> <source|bin>

OS must be one of the systems supported by clusterware: 'el6', 'el7'

Supply 'source' or 'bin' to select whether to build dependencies from
source or to download prebuilt distributions of the dependencies.
EOF
  exit 1
else
  os="$1"
  fetch_handling="$2"
fi

cat <<EOF
[33m===============================================================================
 STARTING INSTALLATION
===============================================================================[0m
EOF

source "${source}/scripts/os/${os}.sh"

cw_BUILD_tmp="${cw_BUILD_tmp:-tmp}"
cw_BUILD_var="${cw_BUILD_var:-/var}"
export cw_UI_disable_spinner="${cw_BUILD_noninteractive}"
mkdir -p ${source}/${cw_BUILD_tmp}/log ${source}/${cw_BUILD_tmp}/src ${source}/${cw_BUILD_tmp}/build
dep_logs="${source}/${cw_BUILD_tmp}/log"
dep_build="${source}/${cw_BUILD_tmp}/build"
dep_src="${source}/${cw_BUILD_tmp}/src"

# Install pre-requisites
title "Installing prerequisites"
doing 'Base'
install_base_prerequisites &> "${dep_logs}/base-prereqs.log"
say_done $?
if fetch_handling_is_source; then
    doing 'Build'
    install_build_prerequisites &> "${dep_logs}/build-prereqs.log"
    say_done $?
fi
doing 'Runtime'
install_runtime_prerequisites &> "${dep_logs}/runtime-prereqs.log"
say_done $?

title "Creating clusterware directory structure"
doing 'Create'
[[ -d "${target}" ]] || mkdir -p "${target}"
mkdir -p "${target}"/var/lock
touch "${target}"/var/lock/clusterware.session.lock
chmod 0644 "${target}"/var/lock/clusterware.session.lock
cp -R "${source}/bin" "${source}/lib" "${source}/libexec" "${target}"
if [ ! -d "${target}/etc" ]; then
    cp -R "${source}/etc" "${target}"
    sed -i -e "s/_OS_/${os}/g" "${target}/etc"/distro.*
    sed -i -e "s,_ROOT_,${target},g" "${target}/etc/ruby.rc" \
        "${target}"/etc/modules/services/*
    if [ "$cw_BUILD_dist_url" ]; then
        sed -e "s,^cw_SERVICE_url=.*,cw_SERVICE_url=${cw_BUILD_dist_url}/,g" -i "${target}/etc"/serviceware.rc
    else
        grep "^cw_" ${source}/scripts/registry.rc >> "${target}/etc"/serviceware.rc
    fi
    rm -f "${target}"/etc/sudoers.d/.gitkeep
    rm -f "${target}"/etc/services/.gitkeep
    rm -f "${target}"/etc/skel/.gitkeep
    chmod 0750 "${target}"/etc/sudoers.d
    cp -R "${source}/dist/distro/${os}" "${target}"/etc/distro
fi
mkdir -p ${cw_BUILD_var}/log/clusterware
say_done $?

title "Installing Clusterware base configuration"
doing 'Install'
mkdir -p /etc/xdg/clusterware
cat <<EOF > /etc/xdg/clusterware/config.rc
cw_ROOT="${target}"
kernel_load() { source "${target}/lib/clusterware.kernel.sh"; }
EOF
cp /etc/xdg/clusterware/config.rc /etc/xdg/clusterware/config.vars.sh
cat <<EOF > /etc/xdg/clusterware/config.cshrc
set cw_ROOT="${target}"
EOF
cp /etc/xdg/clusterware/config.cshrc /etc/xdg/clusterware/config.vars.csh
say_done $?

for dep in ${deps}; do
    source "${source}/scripts/dependencies/${dep}.sh"
    if ! detect_${dep}; then
        fetch_${dep}
    fi
done

for dep in ${deps}; do
    if ! detect_${dep}; then
        install_${dep}
    fi
done

# XXX - replace with forge

title "Setting up services base repository"
if [ -d "${target}/var/lib/services/repos" ]; then
    doing 'Detect'
else
    doing 'Initialize'
    if [ "$cw_BUILD_repos_url" ]; then
        mkdir -p "${target}"/var/lib/services/repos/base
        tar -C "${target}"/var/lib/services/repos/base -xvzf "${source}"/clusterware-services.tar.gz &> "${dep_logs}/services-init.log"
    else
        export cw_SERVICE_rev cw_SERVICE_track
        "${target}/bin/alces" service update &> "${dep_logs}/services-init.log"
    fi
fi
say_done $?

title "Setting up documents area"
if [ -d "${target}/var/lib/docs/base" ]; then
    doing 'Detect'
else
    doing "Initialize"
    mkdir -p "${target}/var/lib/docs/base/guides" "${target}/var/lib/docs/base/templates"
fi
say_done $?

title "Installing profile hooks"
doing 'Install'
cp "${source}/dist/profile"/* /etc/profile.d
say_done $?

title "Installing logrotate hooks"
doing 'Install'
sed -e "s,_ROOT_,${target},g" "${source}/dist/logrotate/clusterware" > /etc/logrotate.d/clusterware
say_done $?

title "Installing sudoers hooks"
doing 'Install'
for a in "${source}"/dist/sudoers/*; do
    t="/etc/sudoers.d/$(basename "${a}")"
    sed -e "s,_ROOT_,${target},g" "${a}" > "${t}"
    chmod 0400 "${t}"
done
say_done $?

title "Performing distro-specific customizations"
doing 'Install'
install_distro_specific &> "${dep_logs}/distro-specific.log"
say_done $?

if [ "$(type -t lsof)" ]; then
    ppid=`ps -p $$ -o ppid=`
    user_shell=`lsof -p $ppid | awk '(NR==2) {print $1}'`
fi

case $user_shell in
    sh|bash|ksh|zsh)
        rc_script_ext=sh
        ;;
    tcsh|csh)
        rc_script_ext=csh
        ;;
    *)
        rc_script_ext=sh
        ;;
esac

cat <<EOF
[33m
===============================================================================
 INSTALLATION COMPLETE
===============================================================================
[0m[1m
Global profile scripts have been installed in:

/etc/profile.d/alces-clusterware.sh
/etc/profile.d/alces-clusterware.csh

Please login again, or manually run the following:

source /etc/profile.d/alces-clusterware.${rc_script_ext}

Afterwards, execute 'alces' for further information.
[0m
EOF

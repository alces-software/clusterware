#!/bin/bash
#==============================================================================
# Copyright (C) 2015-2016 Stephen F. Norledge and Alces Software Ltd.
#
# This file/package is part of Alces Clusterware.
#
# Alces Clusterware is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License
# as published by the Free Software Foundation, either version 3 of
# the License, or (at your option) any later version.
#
# Alces Clusterware is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this package.  If not, see <http://www.gnu.org/licenses/>.
#
# For more information on the Alces Clusterware, please visit:
# https://github.com/alces-software/clusterware
#==============================================================================
setup() {
    local a xdg_config
    IFS=: read -a xdg_config <<< "${XDG_CONFIG_HOME:-$HOME/.config}:${XDG_CONFIG_DIRS:-/etc/xdg}"
    for a in "${xdg_config[@]}"; do
        if [ -e "${a}"/clusterware/config.rc ]; then
            source "${a}"/clusterware/config.rc
            break
        fi
    done
    if [ -z "${cw_ROOT}" ]; then
        echo "$0: unable to locate clusterware configuration"
        exit 1
    fi
    kernel_load
}

main() {
    echo "$$" > /var/run/clusterware-configurator.pid
    files_load_config --optional configurator
    if [ "${cw_CONFIGURATOR_skip}" == true ]; then
        action_die "skipping configurator execution" 0
    elif [ "${cw_CONFIGURATOR_delay_file}" ]; then
        if ! files_wait_for_file "${cw_CONFIGURATOR_delay_file}" 300; then
            handler_run_hook fail "$@"
            action_die "delay file was never created: ${cw_CONFIGURATOR_delay_file}"
        fi
    fi
    handler_run_hook initialize "$@"
    if files_wait_for_file "${cw_ROOT}/etc/config.yml" 300; then
        "${cw_ROOT}"/libexec/share/fetch-config
        handler_run_hook preconfigure "$@"
        handler_run_hook configure "$@"
        handler_run_hook start "$@"
        handler_run_hook node-started "$@"
    else
        handler_run_hook fail "$@"
        action_die "unable to load configuration: ${cw_ROOT}/etc/config.yml"
    fi
}

setup

require action
require handler
require files

main "$@"

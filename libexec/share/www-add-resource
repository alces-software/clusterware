#!/bin/bash
#==============================================================================
# Copyright (C) 2016 Stephen F. Norledge and Alces Software Ltd.
#
# This file/package is part of Alces Clusterware.
#
# Alces Clusterware is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License
# as published by the Free Software Foundation, either version 3 of
# the License, or (at your option) any later version.
#
# Alces Clusterware is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this package.  If not, see <http://www.gnu.org/licenses/>.
#
# For more information on the Alces Clusterware, please visit:
# https://github.com/alces-software/clusterware
#==============================================================================
setup() {
    local a xdg_config
    IFS=: read -a xdg_config <<< "${XDG_CONFIG_HOME:-$HOME/.config}:${XDG_CONFIG_DIRS:-/etc/xdg}"
    for a in "${xdg_config[@]}"; do
        if [ -e "${a}"/clusterware/config.rc ]; then
            source "${a}"/clusterware/config.rc
            break
        fi
    done
    if [ -z "${cw_ROOT}" ]; then
        echo "$0: unable to locate clusterware configuration"
        exit 1
    fi
    kernel_load
}

main() {
    local dir name config htdocs resource_file modal_file
    dir="$1"
    name=$(basename "$1")
    config="${dir}/config.yml"
    htdocs="${dir}/htdocs"
    if [ ! -f "$config" ]; then
        echo "$0: could not read config file: ${config}"
        exit 1
    elif [ -d "${cw_ROOT}"/var/lib/alces-flight-www/flight/"${name}" ]; then
        echo "$0: resource already exists: ${name}"
        exit 1
    fi
    # create resource file
    resource_file="$(mktemp /tmp/clusterware.www-add-resource.XXXXXXXX)"
    # create modal file
    modal_file="$(mktemp /tmp/clusterware.www-add-resource.XXXXXXXX)"

    # parse config file
    ruby_run <<RUBY
require 'yaml'
config = YAML.load_file('${config}')
resource_tpl = File.read("${cw_ROOT}/etc/alces-flight-www/templates/resource.html.tpl")
modal_tpl = File.read("${cw_ROOT}/etc/alces-flight-www/templates/modal.html.tpl")
resource_tpl.gsub!('_NAME_','${name}')
resource_tpl.gsub!('_SHORTTITLE_',config['short_title'] || config['title'] || '${name}')

paras = ""
config['paras'].each do |p|
  paras << "<p>#{p}</p>"
end
modal_tpl.gsub!('_NAME_','${name}')
modal_tpl.gsub!('_TITLE_',config['title'] || '${name}')
modal_tpl.gsub!('_PARAS_',paras || '<p>The resource "${name}" is installed.</p>')

File.write("${resource_file}", resource_tpl)
File.write("${modal_file}", modal_tpl)
RUBY

    # Add a resource section to index.html
    sed -i "/<!-- =RESOURCES= -->/r ${resource_file}" "${cw_ROOT}"/var/lib/alces-flight-www/flight/index.html
    # Add a modal section to index.html
    sed -i "/<!-- =MODALS= -->/r ${modal_file}" "${cw_ROOT}"/var/lib/alces-flight-www/flight/index.html
    rm -f "${resource_file}" "${modal_file}"

    mkdir "${cw_ROOT}"/var/lib/alces-flight-www/flight/"${name}"
    if [ -d "$htdocs" ]; then
        cp -R "${htdocs}"/* "${cw_ROOT}"/var/lib/alces-flight-www/flight/"${name}"
        # Update the site with configuration values
        files_load_config config config/cluster
        files_load_config clusterware

        shopt -s globstar nullglob
        sed -i -e "s,_CLUSTERNAME_,${cw_CLUSTER_name},g" \
            -e "s/_RELEASE_/${cw_RELEASE}/g" \
            -e "s/_HOSTNAME_/${host}/g" \
            -e "s/_IP_/$(network_get_public_address)/g" \
            -e "s,_ROOT_,${cw_ROOT},g" \
            "${cw_ROOT}"/var/lib/alces-flight-www/flight/"${name}"/**/*.html
        shopt -u globstar nullglob
    fi
}

setup

require ruby
require files
require network

main "$@"

#!/bin/bash
#==============================================================================
# Copyright (C) 2015 Stephen F. Norledge and Alces Software Ltd.
#
# This file/package is part of Alces Clusterware.
#
# Alces Clusterware is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License
# as published by the Free Software Foundation, either version 3 of
# the License, or (at your option) any later version.
#
# Alces Clusterware is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this package.  If not, see <http://www.gnu.org/licenses/>.
#
# For more information on the Alces Clusterware, please visit:
# https://github.com/alces-software/clusterware
#==============================================================================
setup() {
    local a xdg_config
    IFS=: read -a xdg_config <<< "${XDG_CONFIG_HOME:-$HOME/.config}:${XDG_CONFIG_DIRS:-/etc/xdg}"
    for a in "${xdg_config[@]}"; do
        if [ -e "${a}"/clusterware/config.vars.sh ]; then
            source "${a}"/clusterware/config.vars.sh
            break
        fi
    done
    if [ -z "${cw_ROOT}" ]; then
        echo "$0: unable to locate clusterware configuration"
        exit 1
    fi
    kernel_load
}

main() {
    local fetchers
    if [ -f "${cw_ROOT}/etc/config.yml" ]; then
        fetchers="$(mktemp /tmp/clusterware.fetchers.XXXXXXXX)"
        ruby_run <<RUBY > "${fetchers}"
require 'yaml'
config = YAML.load_file('${cw_ROOT}/etc/config.yml')['cluster']
fetcher_cmds = ['cd ${cw_ROOT}']
if config && config['files']
  config['files'].each do |f|
    fetcher_cmds << %(curl -sq -o "#{f['target']}" #{f['url']})
    if f.key?('mode')
      mode = (Fixnum === f['mode'] ? f['mode'].to_s(8) : f['mode'])
      fetcher_cmds << %([ -f "#{f['target']}" ] && chmod #{mode} "#{f['target']}")
    end
    fetcher_cmds << %([ -f "#{f['target']}" ] && chown #{f['owner']} "#{f['target']}") if f.key?('owner')
  end
end
puts fetcher_cmds.join("\n")
RUBY
        . "${fetchers}"
        rm -f "${fetchers}"
    fi
}

setup

require ruby

main "$@"

<<DOC
: '
: NAME: gridware
: SYNOPSIS: Compile and install gridware for local environment
: VERSION: 1.0.0
: '
DOC
#==============================================================================
# Copyright (C) 2007-2015 Stephen F. Norledge and Alces Software Ltd.
#
# This file/package is part of Alces Clusterware.
#
# Alces Clusterware is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License
# as published by the Free Software Foundation, either version 3 of
# the License, or (at your option) any later version.
#
# Alces Clusterware is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this package.  If not, see <http://www.gnu.org/licenses/>.
#
# For more information on the Alces Clusterware, please visit:
# https://github.com/alces-software/clusterware
#==============================================================================
# vim: set filetype=ruby :
# Execute as ruby script if we're evaluating under bash
if [ "" ]; then 0; else eval 'cw_RUBY_EXEC "$@" || exit 1'; fi; end

if Process.euid != 0
  require 'etc'
  begin
    gridware_group = Etc.getgrnam('gridware')
    raise 'Gridware group membership not found' unless Process.groups.include?(gridware_group.gid)
  rescue
    STDERR.puts "alces gridware: permission denied"
    exit 1
  end
end

File.umask(0002)

if ARGV[0] == 'init'
  ARGV.shift
  Kernel.exec "#{ENV['cw_ROOT']}/libexec/gridware/init", *ARGV
else
  unless ENV['cw_GRIDWARE_root']
    v = `bash -c 'source #{ENV['cw_ROOT']}/etc/gridware.rc 2> /dev/null && echo ${cw_GRIDWARE_root}'`.chomp
    ENV['cw_GRIDWARE_root'] = v unless v.empty?
  end
  unless ENV['cw_GRIDWARE_notify']
    v = `bash -c 'source #{ENV['cw_ROOT']}/etc/gridware.rc 2> /dev/null && echo ${cw_GRIDWARE_notify}'`.chomp
    ENV['cw_GRIDWARE_notify'] = v unless v.empty?
  end

  if ! File.exist?("#{ENV['cw_GRIDWARE_root']}/etc/gridware.yml") &&
     ! File.exist?("#{ENV['cw_ROOT']}/etc/gridware.yml")
    STDERR.puts "alces gridware: uninitialized; try 'alces gridware init' first"
    exit 1
  end
end

ENV['ALCES_CONFIG_PATH'] ||= "#{ENV['cw_GRIDWARE_root']}/etc:#{ENV['cw_ROOT']}/etc"
ENV['BUNDLE_GEMFILE'] ||= "#{ENV['cw_ROOT']}/lib/ruby/Gemfile"
$: << "#{ENV['cw_ROOT']}/lib/ruby/lib"

require 'rubygems'
require 'bundler'
Bundler.setup(:default)

require 'alces/packager/cli'

Alces::Packager::CLI.run! if $0 == __FILE__

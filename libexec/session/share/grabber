#!/bin/bash
#==============================================================================
# Copyright (C) 2015 Stephen F. Norledge and Alces Software Ltd.
#
# This file/package is part of Alces Clusterware.
#
# Alces Clusterware is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License
# as published by the Free Software Foundation, either version 3 of
# the License, or (at your option) any later version.
#
# Alces Clusterware is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this package.  If not, see <http://www.gnu.org/licenses/>.
#
# For more information on the Alces Clusterware, please visit:
# https://github.com/alces-software/clusterware
#==============================================================================
setup() {
    local a xdg_config
    IFS=: read -a xdg_config <<< "${XDG_CONFIG_HOME:-$HOME/.config}:${XDG_CONFIG_DIRS:-/etc/xdg}"
    for a in "${xdg_config[@]}"; do
        if [ -e "${a}"/clusterware/config.vars.sh ]; then
            source "${a}"/clusterware/config.vars.sh
            break
        fi
    done
    if [ -z "${cw_ROOT}" ]; then
        echo "$0: unable to locate clusterware configuration"
        exit 1
    fi
    kernel_load
}

take_screenshot() {
    local display
    display=$1

    # Dump image of session X window.
    xwd -root -silent -display ":${display}" | \

        # Convert to base64-encoded PNG.
        xwdtopnm | \
        pnmtopng | \
        base64 | \

        # Pipeline so far gives multiple whitespace-separated lines as output;
        # convert to single line with internal whitespace stripped.
        xargs | \
        tr -d "[:space:]"
}

main() {
    local display sessionid
    display="$1"
    sessionid="$2"
    action_check_progs base64 xwd xwdtopnm pnmtopng
    # Give the session a chance to start first.
    sleep 10
    while true; do
        action_warn "$(date --rfc-3339=seconds): Taking screenshot"
        take_screenshot "$display" | handler_run_hook session-screenshot "$sessionid"
        sleep 60 &>/dev/null </dev/null &
        wait
    done
}

setup
require action
require handler

main "$@"

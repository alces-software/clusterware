#!/bin/bash
#==============================================================================
# Copyright (C) 2015 Stephen F. Norledge and Alces Software Ltd.
#
# This file/package is part of Alces Clusterware.
#
# Alces Clusterware is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License
# as published by the Free Software Foundation, either version 3 of
# the License, or (at your option) any later version.
#
# Alces Clusterware is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this package.  If not, see <http://www.gnu.org/licenses/>.
#
# For more information on the Alces Clusterware, please visit:
# https://github.com/alces-software/clusterware
#==============================================================================
require action
require vnc

main() {
    local sessionid sessiondir vars
    local -A vnc
    if [ "$1" == "--vars" ]; then
        vars=true
        shift
    fi
    sessionid="$1"
    if [ "$sessionid" ]; then
        if sessiondir=$(vnc_find_sessiondir "${sessionid}"); then
            sessionid=$(basename "$sessiondir")
            if [ "$vars" ]; then
                echo "vnc[ID]=\"${sessionid}\""
                cat "${sessiondir}"/metadata.vars.sh
            else
                . "${sessiondir}"/metadata.vars.sh
                host="Host address: ${vnc[ACCESS_HOST]}"
                if [ "${vnc[ACCESS_HOST]}" != "${vnc[HOST]}" ]; then
                    host="$host
Service host: ${vnc[HOST]}"
                fi
                cat <<EOF
Identity:     ${sessionid}
Type:         ${vnc[TYPE]}
Host name:    ${vnc[HOSTNAME]}
$host
Port:         ${vnc[PORT]}
Display:      ${vnc[DISPLAY]}
Password:     ${vnc[PASSWORD]}
Websocket:    ${vnc[WEBSOCKET]}
URL:          vnc://${USER}:${vnc[PASSWORD]}@${vnc[HOST]}:${vnc[PORT]}
EOF
            fi
        else
            action_die 'no matching session could be found'
        fi
    else
        action_die 'no session identity was specified - use list to show sessions'
    fi
    action_cleanup
}

main "$@"

#!/bin/bash
#==============================================================================
# Copyright (C) 2015 Stephen F. Norledge and Alces Software Ltd.
#
# This file/package is part of Alces Clusterware.
#
# Alces Clusterware is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License
# as published by the Free Software Foundation, either version 3 of
# the License, or (at your option) any later version.
#
# Alces Clusterware is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this package.  If not, see <http://www.gnu.org/licenses/>.
#
# For more information on the Alces Clusterware, please visit:
# https://github.com/alces-software/clusterware
#==============================================================================
require action
require serviceware
require ui

main() {
    local repopath reponame servicepath service component enabled installed
    if [ "$1" == "--components" ]; then
        with_components=true
        shift
    fi
    for repopath in "${cw_SERVICEWARE_REPODIR}"/*; do
        reponame=$(basename "$repopath")
        for servicepath in "${repopath}"/*; do
            if [[ ! -d "$servicepath" ]]; then
                # We consider any directory within the repo to be for a
                # service, and skip any other files.
                continue
            fi

            service="$(basename "$servicepath")"
            if [ "${with_components}" ]; then
                if serviceware_is_installed "${service}"; then
                    for component in $(serviceware_list_components "${reponame}/${service}"); do
                        installed='*'
                        if ! serviceware_is_enabled "${service}-${component}"; then
                            installed=' '
                        fi
                        ui_print_enabled_status_line "${installed}" "${reponame}" "${service}" "${component}"
                    done
                fi
            else
                if serviceware_is_installed "${service}"; then
                    installed='*'
                else
                    installed=' '
                fi
                ui_print_enabled_status_line "${installed}" "${reponame}" "${service}"
            fi
        done
    done
    action_cleanup
}

main "$@"

#!/bin/bash
#==============================================================================
# Copyright (C) 2015 Stephen F. Norledge and Alces Software Ltd.
#
# This file/package is part of Alces Clusterware.
#
# Alces Clusterware is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License
# as published by the Free Software Foundation, either version 3 of
# the License, or (at your option) any later version.
#
# Alces Clusterware is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this package.  If not, see <http://www.gnu.org/licenses/>.
#
# For more information on the Alces Clusterware, please visit:
# https://github.com/alces-software/clusterware
#==============================================================================
require action
require git
require serviceware
require ui
require process

main() {
    local repo url rev
    # --match-remote is a hidden option for use when developing, which is given
    # a repo branch parameter and should update the local repo to match that
    # branch, ignoring local changes.
    if [[ "$1" == "--match-remote" ]]; then
        match_remote_branch='master'
        shift
        if [[ "$1" ]]; then
            match_remote_branch="$1"
            shift
        fi
    fi

    if [ "$1" ]; then
        repo="$1"
        url="$2"
    else
        repo="${cw_SERVICEWARE_DEFAULT_REPO}"
        url="${cw_SERVICEWARE_DEFAULT_REPO_URL}"
    fi
    rev="${cw_SERVICE_rev}"
    track="${cw_SERVICE_track:-master}"

    if [ ! -d "${cw_SERVICEWARE_REPODIR}/${repo}" ]; then
        if [ -z "$url" ]; then
            action_die "no repository URL was specified for repo: $1" 1
        fi
        echo "Initializing serviceware: ${repo}"
        doing 'Clone'
	if [ "${rev}" ]; then
            git_clone_rev "${url}" "${cw_SERVICEWARE_REPODIR}/${repo}" "${rev}" "${track}"
	else
            git_clone "${url}" "${cw_SERVICEWARE_REPODIR}/${repo}"
	fi
        say_done $?
    else
        echo "Updating serviceware: ${repo}"
        doing 'Update'
        clonedir="${cw_SERVICEWARE_REPODIR}/${repo}"
        if [[ -n "${match_remote_branch}" ]]; then
            git_match_remote "${clonedir}" "${match_remote_branch}"
        else
            git_update "${clonedir}"
        fi
        say_done $?
    fi
    action_cleanup
}

process_reexec_sudo "$@"
main "$@"
